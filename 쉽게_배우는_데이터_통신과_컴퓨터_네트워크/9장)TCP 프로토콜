Page	김보미
301	데.링계층은 물리적 사이 데이터 전송인 반면 전송계층은 논리적인 선로
302	전송계층 주요 기능: 1흐름제어(데이터 분실시 처리과정땜에 효율떨어짐->흐름제어) 2 오류제어(데이터 깨지거나 분실->재전송)
303	 3 분할과 병합 4서비스 프리미티브(전송계층 서비스 이용하기 위한 인터페이스. 비연결형&연결형 둘 다 지원)
304	전송계층 설계시 고려사항: 1주소표현
305	 2멀티플렉싱-상방향, 하방향 두가지 종류
306	 3 연결설정-연결요청인 Conn_Req와 상대편이 연결수락했다는 Conn_Ack 회신으로 완료됨
307	 4 연결 해제 - 일방적 연결해제랑 점진적 연결해제 두 종류.
308	  ㄴ 일방적: 양방향 연결 하나. 하나만 정지시키면 됨 / 점진적: 단방향 두개. 둘다 종료해야
309	TCP프로토콜 - 연결형, 전이중(Full Duplex)방식 양방향 가상 회선, 신뢰성
310	TCP는 데이터를 세그먼트라는 블록 단위로 분할해 전송. 블록크기는 가변 크기 지원
311	TCP헤더는 여덟개의 플래그 비트를 비롯해 많은 필드를 사용함. UDP보다 전송과정 복잡
312	TCP헤더의 플래그 비트는 8개로 정의됨. 처음 2개는 혼잡 제어, 나머지 6개는 1일때 각각 다른 의미를 지님
313	TCP의 ECN기능: 라우터가 송신 프로세스에 혼잡 발생 알려줘서 송신 프로세스 스스로 트래픽 완화하는 기술
314	TCP캡슐화 -  [ [IP헤더] + [ [TCP헤더] + [계층 5프로토콜 데이터] ] ] 
315	포트번호: TCP와  UDP가 상위 계층에 제공하는 주소 표현 방식. TCP와 UDP는 별도의 포트공간 관리해서 동일한 포트 사용해도 괜찮
316	TCP는 양방향 통신이라 동시에 양쪽에서 전송 가능. => 전송+응답 데이터 같이 전송하는 피기배킹 사용
317	흐름제어하려고 슬라이딩 윈도우 프로토콜 사용. 윈도우 크기를 늘리거나 줄이거나해서 전송 속도 조절
318	TCP데이터를 세그먼트. 순서 번호 함께 전송. 순서번호 동일하면 중복으로, 없으면 분실로 판단. 부정응답인 NAK사용안함->타임아웃으로 오류 복구
319	긍정응답 세그먼트에 오류가 발생하면 수신쪽에 정상으로 받은 세그먼트를 재전송해서 중복될수도 . 그래서 순서번호로 중복 여부 처리할수있어야
320	연결해제: 연결해제하고자 하는 쪽에서 FIN플래그 요구. 그 응답할때까진 연결 유지
321	혼잡제어: ECN기능. 연결 설정단계에서 ECN사용할건지 협상. 데이터 전송단계에서 혼잡을 인지한 라우터가 혼잡 통지->데이터 양 줄임
322	수신 프로세스의 중개를 거쳐 간접적으로 송신 프로세스 혼잡 통지 -> 이유:라우터의 구조적 한계. 라우터가 ECN반복 수행못하도록 하는 효과도 있음
