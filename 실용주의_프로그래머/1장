Page	김보미
29	실용적이려면 문제를 더 큰 그림을 보면서 접근하라
30	지식과 경험 쌓기, 소통
31	전문가답다 = 정직하고 솔직해지는 것
32	책임지기 실수를 했다면 변명 대신 대안을 제시하라
33	
34	소프트웨어 부패 - 심리학적, 문화적인 요소 가장 중요
35	깨진 창문'을 내버려두면 더 큰 문제 발생
36	한 번 망가지기 시작하면 걷잡을 수 없음. 미리방지하자
37	try! '깨진창문' 코드 고치기 / 깨진창문 코드가 언제 발생? 그게 내 의지 아니었다면?
38	소수의 지식인들이 우매한 대중을 어떻게 다스리는지 보여주는군 흠ㅋ
39	작은 일부터 차근차근 시작하면 사람들이 'start-up fatigue'를 느끼지 않음
40	변화의 촉매가 되라, 큰 그림 기억하기
41	상황이 점진적으로 변하는데 나쁜쪽으로 간다면 알아차려/좋은쪽으로 가도록 내가 유도하자
42	시스템이 성공하기 위한 '적당히 괜찮은'코드는 어떤 것일까
43	내 편의를 위해 프로그램을 만들지 마라. 사용자의 생각 중요
44	지나치게 완벽을 추구하는 코드는 실용적이지 X
45	복잡&완벽&긴 개발기간 vs 간단&결함적음  -> 나라면 후자 선택할 듯
46	시간에 따라 지식의 가치는 낮아짐. 지식업뎃하자
47	주기적 지식 쌓는 습관 갖기 / 여러종류 기술 알기 / 지식에 분산투자로 리스트 줄이자
48	떠오르는 기술 찾아내는 안목 중요 / 내가 가진 기술이 한물 간 기술은 아닌지?
49	목표 : 매년 새로운 언어-사고확장에 도움 / 기술&비기술 서적 자주 읽기 / 
50	회사일만 집중하면 고립됨 / 다른 개발 환경에서 해보기 / 최신기술에 관심 / 
51	모르는 것을 인정하는 것에서 나아가 학습 기회로 삼기
52	읽고 듣는 것을 비판적으로 분석하라
53	Try 새 언어/ 새 책/ 현재 하는 일과 관련되지 않은 다른 인맥 찾아보기
54	개발자는 사용자, 기계, 동료 개발자 등등 과 소통한다. 소통은 중요하다.
55	내가 말하고 싶은 것 정리하기 / 듣는 사람이 잘 이해할 수 있어야 좋은 소통
56	말하는 때 중요 
57	듣는 사람에 따라 브리핑 방식 달리하기 / 아이디어를 날것으로 전달X 잘 포장ㅇ
58	타인의 피드백 참고 / 잘 말하는 것은 잘 듣는 것 / 상대방에게 응답하는것 중요
59	말하는 것과 똑같이 이메일도 중요하다
60	무엇을 말하는가, 어떻게 말하는가 둘 다 중요
