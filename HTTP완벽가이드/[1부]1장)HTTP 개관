	1장 HTTP 개관	3p~25p
31	HTTP : Hyper Transfer Protocol, 인터넷의 공용어	
32	HTTP 는 신뢰성 있는 프로토콜 사용 -> 데이터 보장해줌 / 웹 콘텐츠는 서버에 존재. 웹서버는 HTTP프로토콜로 소통하기때문에 HTTP서버라고 부름	
33	웹 서버는 웹 리소스를 관리, 제공함. 리소스는 정적 파일일 필요 X	
34	웹 서버는 모든 HTTP 객체 데이터에 MIME 타입을 붙임. MIME 타입 예시: text/heml || image/gif ... 처럼 주타입/부타입으로 구성된 문자열임	
35	URI(uniform resource identifier): 리소스는 각자 이름을 갖고있어서 URI로 관심있는 리소스 지목 가능. URI 에는 URL, URN 두가지 있음	
36	ㄴ URL(uniform resource location): 특정 서버의 한 리소스에 대한 구체적 위치 서술 / URN(~~ name): 어떤 리소스에 대해 그 위치에 영향 받지 않는 유일무이한 이름 역할을 함. 리소스 위치를 옮기더라도 문제 없이 동작	
37	트랜잭션: HTTP 트랜잭션은 요청 명령(클라->서버) 와 응답 결과(서버->클라)로 구성	
38	메서드, 상태코드	
39	웹페이지는 여러 객체로 이루어질 수 있음. 웹페이지는 보통 리소스의 모음	
40	요청응답 메시지: 시작줄+헤더+본문으로 구성	
41	HTTP는 애플리케이션 계층 프로토콜. 네트워크 통신 세부사항에 대해서는 신경쓰지 않고 대신 신뢰성있는 프로토콜인 TCP/IP에게 맡김	
42	TCP는 오류없, 순서보장, 조각나지 않는 데이터 를 제공	
43	TCP커넥션을 맺으려면 서버 컴퓨터에 대한 IP주소와 포트번호 필요	
44	텔넷을 이용한 실전 예제	
45		
46	프로토콜 버전 HTTP/0.9 ~ HTTP/2.0	
47	웹의 구성요소: 프락시(클라-서버 HTTP 중개자), 캐시(클라 가까이에 HTTP 창고), 게이트웨이(다른 앱과 연결된 특별한 웹 서버), 터널(HTTP통신 전달만하는 프락시), 에이전트(자동화된 HTTP요청 만드는 클라)	
48	프락시: 클라-서버 사이에서 클라이언트의 모든 HTTP 요청을 서버에 전달. 보안을 위해 사용, 요청과 응답 필터링 / 캐시: 자주 찾는것의 사본을 저장해두는 HTTP 프락시 서버	
49	게이트웨이: 다른 서버들의 중개자로 동작하는 서버. 주로 HTTP 트래픽을 다른 프로토콜로 변환하기 위해 사용 / 터널: 두 커넥션 사이에서 데이터 열어보지 않고 그대로 전달해주는 HTTP 애플리케이션 (ex: HTTP/SSL)	
50	에이전트: 사용자를 위해 HTTP 요청을 만들어주는 클라이언트 프로그램. (ex. 스파이너, 웹로봇)	
51	추가 정보 (참고 사이트들)	
