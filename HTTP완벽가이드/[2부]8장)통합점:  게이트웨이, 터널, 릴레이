	8장 통합점: 게이트웨이, 터널, 릴레이
252	리소스 접근 시 HTTP가 어떻게 쓰이는지 알아볼 예정: 게이트웨이, 인터페이스, 터널, 릴레이
253	게이트웨이 - HTTP 트래픽을 다른 프로토콜로 자동 변환 => 클라이언트가 다른 프로토콜 알 필요 없이 서버에 접속
254	클라쪽과 서버쪽 게이트웨이 - 웹 게이트웨이는 한쪽에선 HTTP로 통신, 다른쪽은 HTTP 아닌 다른 프로토콜 통신. 둘은 / 로 구분
255	프로토콜 게이트웨이: 프락시에 트래픽 바로 보내는것처럼 게이트웨이도 HTTP 트래픽 바로 보낼 수 있음(명시적 설정 or 대리서버(리버스프락시)로 설정) (ex. 브라우저가 FTP 서버에 명령보내는 대신 게이트웨이어 명령 보냄)
256	HTTP/*: 서버 측 웹 게이트웨이: 클라로부터 요청 들어오면 그 HTTP 요청을 외래 프로토콜로 전환함
257	HTTP/HTTPS: 서버 측 보안 게이트웨이: 자동으로 모든 세션 암호화
258	HTTPS/HTTP: 클라이언트 측 보안 가속 게이트웨이: 보안 가속기로 유명. 웹 서버 앞단. 리버스 프락시 역할. 복호화해서 웹 서버로 보낼 HTTP 요청 만듦. 근데 이러면 게이트웨이-원서버 간은 암호화 안되어있기 때문에 이 구간은 안전한지 확인 필요
259	리소스 게이트웨이: 클라와 통신하고 서버측 프로그램에 연결하는 서버측 게이트웨이. 유명한것으로 CGI
260	공용 게이트웨이 인터페이스(CGI): 서버 확장임. 동적 HTML, 신용카드 처리, DB 질의 등 제공하는데 사용
261	서버 확장 API: 자신의 코드를 서버에 연결 or 서버 컴포넌트를 자신이 만든 것으로 교체 가능
262	터널: HTTP의 또 다른 방식. HTTP 지원하지 않는 앱에 HTTP 애플리케이션 사용해 접근하는 방법 제공
263	 웹 터널은 CONNECT 메서드 사용하여 커넥션 맺음.
264	 CONNECT 요청 / CONNECT 응답 - 클라는 요청 전송 후 게이트웨이 응답 기다림
265	게이트웨이는 패킷 순서나 흐름 보장 X, 터널 연결되면 데이터는 어디로든 흘러갈 수..
266	SSL 터널링: 웹 터널은 원래 방화벽 통해 암호화된 트래픽 전달 목적. 하지만 암호화 되어있어 낡은 프락시에선 처리되지 않음 => 프락시 방화벽 통과할 수 있도록 HTTP에 터널링 기능 추가됨. 이 기능은 암호화된 데이터 담고 일반 HTTP 채널 통해 데이터 전송
267	
268	
269	
270	
