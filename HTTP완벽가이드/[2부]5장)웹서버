	5장 웹서버	125~146	
151	웹 서버는 HTTP 요청 처리하고 응답 제공		
152	웹 서버 기능: HTTP프로토콜 구현, 웹 리소스 관리, 웹 서버 관리 / 웹 서버 여러 형태 있음		
153	 다목적 소프트웨어 웹 서버:네트워크 연결된 표준 컴퓨터에서 동작(아파치, W3C) / 임베디드 웹 서버: 소비자용 제품에 내장		
154	최소한 기능 HTTP 서버는 펄 코드로도 가능		
155	 :30줄 이하로 웹 서버에 브라우저로 접근, 프로그램이 요청 받아서 처리해줌		
156	웹 서버 하는 일: 커넥션 > 요청받아 처리 > 리소스 접근 > 응답 만들어 보내기 > 트랜잭션을 로깅		
157	단계1) 클라 커넥션 수락 - 이미 지속적 커넥션 갖고 있으면 그 커넥션 사용하면됨 / 새 커넥션 요청? 웹 서버는 TCP커넥션에서 IP 추출하여 클라 확인. 클라가 이상하다면 커넥션 닫음		
158	 ㄴ DNS 이용해 IP 주소 변환함		
159	  ident 프로토콜은 서버가 어떤 사용자가 HTTP 초기화 했는지 알수있게(근데 내부에선 ㅇㅋ 공공인터넷에선 잘 동작 ㄴ)		
160	단계2) 요청 메시지 수신: 요청줄 파싱 > 메시지 헤더 읽기(각 헤더 CRLF로 끝남) > 헤더 끝 찾기 > 요청 본문 읽기		
161	커넥션 입/출력 아키텍처 : 1. 단일스레드 - 한번에 한 요청  / 2. 멀티프로세스와 멀티스레드 - 여러 요청 동시처리. 스레드는 미리 혹은 필요할때 만들어짐		
162	 3. 다중 I/O 서버 - 모든 커넥션은 감시당함 4. 다중 멀티스레드 웹 서버 - 멀티스레딩+다중화		
163	단계3) 요청 처리: 책 나머지 부분의 내용임 여기선 패스		
164	단계4) 리소스의 매핑과 접근: 방식1. Docroot: 단순하게 URI를 파일 시스템 안의 파일 이름으로 사용(가상 호스팅 가능)		
165	  ㄴ 가상 호스팅 - 한 웹 서버에서 여러 개의 웹 사이트 호스팅. URI 혹은 헤더에서 얻는 정보로 문서 루트 식별 / 사용자 홈 디렉터리 - 한 대의 웹서버, 각자의 개인 웹 사이트 만들 수 있도록		
166	 방식2. 디렉터리 목록: 경로가 아닌 디렉터리 URL 에 대한 요청 받을 수 있음. ('색인 파일' 반환 - index.html)		
167	 방식3 동적 콘텐츠 리소스 매핑: 요청에 맞게 콘텐츠 생성. 애플리케이션 서버라고 불리는것들은 동적 콘텐츠 생성 프로그램 어디에 있는지 어떻게 실행하는지 알려줄 수 있어야		
168	 방식4: 서버사이드 인클루드: 동적 콘텐츠 / 방식 5: 각 리소스에 접근 제어 할당 가능		
169	단계5) 응답 만들기: 응답 메시지 - 상태 코드, 헤더, 본문(옵션) / 웹 서버가 MIME 타입 결정하는 4가지 방법...		
170	 리다이렉션 응답: 3XX 상태코드		
171	단계6) 응답 보내기: 비 지속 커넥션이면 응답 전송 후 자신 커넥션 닫음. 지속 커넥션이면 대부분 유지		
172	단계7) 로깅		
